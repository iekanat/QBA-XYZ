{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Reporting and Documentation\"\nauthor: \"Irfan Kanat\"\ndate: \"June 26, 2017\"\noutput:\n  html_document: default\n  pdf_document: default\nurlcolor: blue\n---\n\nThrough out this course we will conduct various analysis in R and report on the results. Reporting is important because it achieves two things:\n\n  * Reproducability of Results\n  * Communication of Results\n\nFor this purpose we will mainly use R Markdown documents. This learning activity mainly focuses on creating reports with R Markdown, but also points to other formats useful in analysis and reporting.\n\n## Reporting with R Markdown\n\nAn adaptation of markdown format to R, the Rmd file format allows for presentable reporting of R analysis. All documents you encounter in relation to this class have been generated with R markdown. If you are preparing a report to be presented, Rmd is the format you should aim for.\n\nYou may already have noticed that each learning activity comes with a bunch of files (pdf, html, video, and Rmd). Rmd files are the source files through which all other files are generated from. You can inspect them to see how to generate a report with R. I will be expecting all homework assignments related to this course to be submitted in the same format as well.\n\nHere are the most commonly used syntax elements.\n\n    ### Headers:\n\n    # A Hash Sign Signifies a Header\n    ## The More Hashes Mean Lower Level Headers\n    ### The More Hashes Mean Lower Level Headers\n\n  \n    ### Font Effects\n\n    If you want code to be *italic*, **bold**, or ***bold italic*** use asterixes (*) to surrount the words you want emphasized. Single asterix on each side will produce italic, double asterixes will create bold, and triple asterixes will produce . . . you got it, bold italic text.\n\n    ### R Code:\n\n    If you embed R code between ```{r} and ```, the code will be executed and results rendered on\n    resulting document. The area between the ```{r} and ``` is called a chunk. Note the difference\n    in rendering of chunk symbols between the rendered and raw versions. R will treat the backticks\n    as code, hence the difference.\n\n```{r, echo=F, comment=NA}\ncat(\"```{r}\\n ls()\\n```\")\n```\n\nThe code shown above, when rendered looks like this:\n\n### Headers:\n\n# A Hash Sign Signifies a Header\n## The More Hashes Mean Lower Level Headers\n### The More Hashes Mean Lower Level Headers\n\n### Font Effects\n\nIf you want code to be *italic*, **bold**, or ***bold italic*** use asterixes (*) to surrount the words you want emphasized. Single asterix on each side will produce italic, double asterixes will create bold, and triple asterixes will produce . . . you got it, bold italic text.\n\n### R Code:\n\nIf you embed R code between ```{r} and ```, the code will be executed and results rendered on resulting document. The area between the ```{r} and ``` is called a chunk. Note the difference in rendering of chunk symbols between the rendered and raw versions. R will treat the backticks as code, hence the difference.\n\n```{r}\nls()\n```\n\n## A Word About R Markdown\n\nThe way R studio processes R Markdown documents is to run them in an isolated R instance. That means R Markdown documents when rendered through \"knit\" button won't have access to data and packages in your current workspace. You need to load libraries, and data in each document you want to render using those. This is done to ensure reproducability.\n\n## Executing and Rendering Code in R Markdown\n\nIf you want to run code in any chunk (that is an area defined by backticks) you can use the ![](figures/run.png) button. To run line by line, select the line and press CTRL and Enter at the same time. Go ahead the click the little downwards arrow next to the button to see your other options.\n\nOnce you are done writing the document you can click the ![](figures/knit.png) button to create a pdf or html rendering of the markdown file.\n\nRefer to ['R Markdown Cheat Sheet'](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf) for more information on this format.\n\n## R Scripts\n\nR Scripts can be seen as the most basic form of reproducable analysis. If you have no concerns for presentation and just want to automate a process you can basically write your commands in a text file and change the extension to .R, thus achieving an R script file. You can then ask R to execute this file in the command line as seen below, thus repeating the process detailed in the script. This is good for automating work flows.\n\n    R CMD BATCH my_script.R\n\n## More Advanced Reporting Tools\n\nIf you want to create presentations rather than reports, you can use [Beamer](http://rmarkdown.rstudio.com/beamer_presentation_format.html).\n\nFor interactive documents with R, take a look at [Shiny](https://shiny.rstudio.com/).\n\n\n------\n\n![Creative Commons 4](figures/cc.png) How I Learned to Stop Worrying and Love the R Console by [Irfan E Kanat](http://irfankanat.com) is licensed under a [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/). Based on a work at [http://github.com/iekanat/rworkshop](http://github.com/iekanat/rworkshop).",
    "created" : 1498492344025.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1231933807",
    "id" : "142424ED",
    "lastKnownWriteTime" : 1518465070,
    "last_content_update" : 1518465070475,
    "path" : "~/Dropbox/QBAXXXX/R Content/Module 1 - Introduction/2_Reporting.Rmd",
    "project_path" : "2_Reporting.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}