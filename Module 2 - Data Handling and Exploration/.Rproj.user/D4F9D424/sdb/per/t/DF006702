{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Combining Datasets\"\nauthor: \"Irfan Kanat\"\ndate: \"July 4, 2017\"\noutput:\n  html_document: default\n  pdf_document: default\ngeometry: margin=1in\nurlcolor: blue\n---\n\nSometimes the variables we want are spread between two different datasets, or observations are coming from different files. How can we get all the data together? That is what we will learn in this activity.\n\n## Introducing Data\n\nWe will use three datasets in this learning activity.\n\n1- Codes\n\nISO Country Code data\n\n```{r}\ncodes <- read.csv(\"data/codes.csv\")\n```\n\nThe dataset has 3 variables Name of the Country, ISO2 Code, and ISO3 Code.\n\nI will change the column names to ensure uniformity (and to demonstrate how its done).\n\n```{r}\ncolnames(codes) <- c(\"name\", \"iso2\", \"iso3\")\n```\n\n2 - Users\n\nUN Data on number of internet users per 100 people. Data comes in 2 files, one for 2006 and one for 2007\n\n```{r}\nusers2006 <- read.csv(\"data/Users2006.csv\")\nusers2007 <- read.csv(\"data/Users2007.csv\")\n```\n\nData has 3 variables, ISO3, Year, Users.\n\n3 - Internet Servers\n\nWorldbank data on sercure internet servers per 1 million people\n\n```{r}\nservers <- read.csv(\"data/Servers.csv\")\n```\n\nData has 3 variables, iso3, Year, Servers.\n\n## Combine Rows\n\nWhen the datasets have the same structure (variables), you can just append rows of one to the next. \n\nConsider our user data. It is currently split into two datasets, one for 2006 and one for 2007. Would it not be nice to have it in a single file?\n\nLet us check the structure of datasets.\n\n```{r}\nstr(users2006)\nstr(users2007)\n```\n\nSeems like the variables are the same, we can simply add the datasets end to end. I will use rbind() function to bind rows together.\n\n```{r}\nusersLong <- rbind(users2006, users2007)\nView(usersLong)\n```\n\nYou will note the 2007 data just got added to the end of 2006 data. This format (each pairing of group, time in separate rows) is called a long format and is used very commonly in longitudinal and time series analysis.\n\n## Combine Columns\n\nIf the data is structured accordingly, you can simply combine two datasets by bringing relevant columns together.\n\n```{r}\nhead(users2006)\nhead(users2007)\n```\n\nSame countries occur in same rows. We can create a wide dataset where each country gets a row and time observations are recorded in different variables.\n\nLet us make some tweaks so the data will sit nicely together.\n\n```{r}\n# Store the base dataset in a new data.frame\nusersWide <- users2006\n# Tweak the column names a bit\ncolnames(usersWide) <- c(\"iso3\", \"year\", \"users2006\")\n# Now append the relevant columns from second dataset\nusersWide$users2007 <- users2007$Users\n# We don't need year variable anymore since it is in column names.\nusersWide <- usersWide[, -2]\n# Let us look at what we created\nhead(usersWide)\n```\n\nThis is called a wide format dataset. While not as common, this format can sometimes be used in longitudinal analysis as well.\n\n## Combine Based on Groupings\n\nWe have the user data in usersLong data.frame, but the name of the country is not immediately apparent in this dataset. If we could match the usersLong and country codes, we could easily tell which country was which.\n\nTo combine datasets based on groups, we use the merge() function in R. Merge function is similar to a join function in SQL. If you are familiar with SQL, this will be easy to follow.\n\nLet us review the merge() manual pages.\n\n```{r}\n?merge\n```\n\nMerge takes a number of parameters:\n\n1. x: first dataset*\n2. y: second dataset*\n3. by, by.x, by.y: Which columns to use in merging.\n4. all, all.x, all.y: what to do with rows that are not matched (Left Join, Right Join, Inner Join...).\n\n* only the parameters marked with '\\*' are mandatory. If other parameters are left blank, R will try to find common column names and merge based on common columns. \n\nLet us merge codes and usersLong.\n\n```{r}\nusers <- merge(codes, usersLong, by.x = \"iso3\", by.y = \"ISO3\")\nhead(users)\n```\n\nSince the two datasets did not have matching column names, I had to specify columns with by.x, and by.y parameters.\n\nLet us review the function call:\n\n    users <- merge(codes, usersLong, by.x = \"iso3\", by.y = \"ISO3\")\n    \n1. users<-: I assign whatever is to the right of assignment operator (<-) to users\n2. merge(): I call merge function with four parameters\n  + codes: first dataset (x)\n  + usersLong: second dataset (y)\n  + by.x: column name in first dataset to use in matching.\n  + by.y: column name in second dataset to use in matching.\n  \nYou will notice that users has `r nrow(users)` observations whereas the source dataset usersLong had `r nrow(usersLong)` observations. What is the source of difference?\n\nSome rows could not be matched and they were dropped.\n\nIf you want to keep all observations from usersLong, you can use the all.y. \n\n```{r}\nusers <- merge(codes, usersLong, by.x = \"iso3\", by.y = \"ISO3\", all.y = TRUE)\nnrow(users)\n```\nThere, much better.\n\n## Combine Based on Multiple Groupings\n\nWhat if we have more than one variable we want to match?\n\nLet us say we want to combine users and servers to get at an IT infrastructure dataset. There are two levels to data, countries and years... We need to match at two levels of groupings.\n\nLet us see how it is done.\n\n```{r}\nitInfrastructure <- merge(users, servers, by = c(\"iso3\", \"Year\"))\nhead(itInfrastructure)\n```\n\nLet us break down the command:\n\n    itInfrastructure<-merge(users, servers, by=c('iso3', 'Year'))\n\n1. itInfrastructure<-: Assign results into itInfrastructure data.frame\n2. merge(): I called merge function with 3 parameters:\n  + users: first dataset (x)\n  + servers: second dataset (y)\n  + by=c('iso3', 'Year'): since datasets had shared names for these variables I used a single by command and specified two variables.\n\n```{r}\n# I will export this dataset so we can use it in later exercises.\nwrite.csv(itInfrastructure, \"data/itInfrastructure.csv\", row.names = F)\n```\n",
    "created" : 1503091838159.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1057437343",
    "id" : "DF006702",
    "lastKnownWriteTime" : 1503091810,
    "last_content_update" : 1503091810,
    "path" : "~/Dropbox/QBAXXXX/R Content/Module 2 - Data Handling and Exploration/4_Combine.Rmd",
    "project_path" : "4_Combine.Rmd",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}