bagsOfOranges[4:8,] # Observations 4 through 8
4:8
bagsOfOranges[4:8,] # Observations 4 through 8
c(4, 5, 6, 7, 8)
bagsOfOranges[c(4, 5, 6, 7, 8),] # Observations 4 through 8
bagsOfOranges[c(4:6, 7, 8),]
bagsOfOranges[c(3,7),]
nrow(bagsOfOranges) # bagsOfOranges is a data.frame
length(bagsOfOranges$bagNo) # bagNo is a vector
bagsOfOranges$weight>2 # Is weight greater than 2?
bagsOfOranges[bagsOfOranges$weight>2,]
mean(bagsOfOranges$weight)
bagsOfApples<-data.frame(bagNo=1:15, weight=rnorm(15, mean = 2, sd=.5)) # Create a data frame
mean(bagsOfApples)
mean(bagsOfApples$weight)
mean(bagsOfOranges$weight)
sd(bagsOfApples$weight)
sd(bagsOfOranges$weight)
ggplot(data=bagsOfApples, aes(weight))
library(ggplot2)
library(ggplot2)
ggplot(data=bagsOfApples, aes(weight))
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram()
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .1)
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .3)
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .2)
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .25)
set.seed(2017) # Setting the seed for random number generator so that examples stay consistent.
bagsOfOranges<-data.frame(bagNo=1:30, weight=rnorm(30, mean = 2, sd=.1)) # Create a data frame
bagsOfApples<-data.frame(bagNo=1:30, weight=rnorm(30, mean = 2, sd=.5)) # Create a data frame
mean(bagsOfApples$weight)
mean(bagsOfOranges$weight)
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .25)
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram()
ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .2)
p1 <- ggplot(data=bagsOfApples, aes(weight)) + geom_histogram(binwidth = .2) + geom_vline(data=bagsOfApples, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
p1
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
geom_histogram(binwidth = .2) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue")
p1
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
geom_histogram(binwidth = .2) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red")
p1
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
geom_histogram(binwidth = .2) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p1
p2
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p1
p2
p1
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
multiplot(p1, p2, col=2)
?multiplot
??multiplot
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, col=2)
grid.arrange(p1, p2)
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
geom_histogram() +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
geom_histogram() +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
p1 <- ggplot(data=bagsOfApples, aes(weight), xlim(0:4)) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
?xlim
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
xlim(0,4) +
geom_histogram(bins = 10) +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
geom_histogram() +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
xlim(0,4) +
geom_histogram() +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
xlim(0,4) +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
title("Apples") +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
ggtitle("Apples") +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
xlim(0,4) +
ggtitle("Oranges") +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
p1 <- ggplot(data=bagsOfApples, aes(weight)) +
xlim(0,4) +
ylim(0,13) +
ggtitle("Apples") +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfApples, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
p2 <- ggplot(data=bagsOfOranges, aes(weight)) +
xlim(0,4) +
ylim(0,13) +
ggtitle("Oranges") +
geom_histogram(binwidth = .1) +
geom_vline(data=bagsOfOranges, aes(xintercept=mean(weight)), linetype="dashed", colour="blue") +
geom_density(alpha=.2, fill="red") +
theme_bw()
grid.arrange(p1, p2)
?sd
mode(bagsOfApples$weight)
?mode
mod
median(bagsOfApples$weight)
mean(bagsOfApples$weight)
?summary
summary(mtcars)
describe(mtcars)
library(psych)
describe(mtcars)
describe(bagsOfApples)
describe(bagsOfOranges)
cor(mtcars[,1:4])
?mtcars
table(mtcars$gear)
table(mtcars[,c("am","cyl")])
table(mtcars$gear)
qplot(factor(gear), data=mtcars, geom="bar") # used factor to declare categorical
table(mtcars[,c("am","gear")])
table(mtcars[,c("am","gear")])
data(mtcars)
qplot(factor(gear), data=mtcars,  fill=factor(am), geom="bar") # used factor to declare categorical
qplot(weight, data=bagsOfOranges, geom="bar")
qplot(weight, data=bagsOfOranges, geom="hist")
qplot(weight, data=bagsOfOranges, geom="bar", bins=5)
qplot(weight, data=bagsOfOranges, geom="histogram")
qplot(weight, data=bagsOfOranges, geom="histogram", binwidth=.5)
qplot(weight, data=bagsOfOranges, geom="histogram", binwidth=.1)
qplot(weight, data=bagsOfOranges, geom="histogram", binwidth=.05)
1
qplot(weight, data=bagsOfOranges, geom="histogram", binwidth=.1)
qplot(factor(gear), data=mtcars, geom="histogram") # used factor to declare categorical
qplot(factor(gear), data=mtcars, geom="bar") # used factor to declare categorical
qplot(hp, data=mtcars, geom="bar", fill=factor(cylinders))
qplot(hp, data=mtcars, geom="bar", fill=factor(cyl))
qplot(hp, data=mtcars, geom="bar", fill=factor(cyl), stat="mean")
qplot(factor(cyl), data=mtcars, geom="bar", fill=hp, stat="mean")
qplot(x=factor(cyl), y=hp , data=mtcars, geom="bar", stat="mean")
qplot(x=factor(cyl), y=hp , data=mtcars, geom="bar")
qplot
?qplot
qplot(x=factor(cyl), y=hp , data=mtcars)
ggplot(data=mtcars, aes(x=factor(cyl), y=hp)) + geom_bar()
ggplot(data=mtcars, aes(x=factor(cyl), y=hp)) + stat_summary(fun.y="mean", geom="bar")
aggregate(hp~cyl, data=mtcars)
aggregate(hp~cyl, data=mtcars, fun="mean")
aggregate(hp~cyl, data=mtcars, fun=mean)
aggregate(hp~cyl, data=mtcars, mean)
aggregate(hp~cyl, data=mtcars, FUN = mean)
?stat_summary
?aes
install.packages(c("ggplot2", "gridExtra", "psych"))
install.packages("multilevel")
?require
?univbct
library(multilevel)
?univbct
data("univbct")
View(univbct)
univbctp[univbct$COMPANY=="D",]
univbct[univbct$COMPANY=="D",]
head(univbct)
head(univbct)
zillow<-read.csv("data/zillow.csv")
View(zillow)
colnames(zillow)
colnames(zillow[,-9])
colnames(zillowSS0)
zillowSS0<-zillow[, -9]
colnames(zillowSS0)
zillowSS0<-zillow[,!(colnames(zillow) %in% "MoM")]
colnames(zillowSS0)
colnames(zillow) %in% "MoM"
colnames(zillow[,(colnames(zillow) %in% "MoM")])
(zillow[,(colnames(zillow) %in% "MoM")])
names(zillow[,(colnames(zillow) %in% "MoM")])
(zillow[1,(colnames(zillow) %in% "MoM")])
!(colnames(zillow) %in% "MoM")
colnames(zillowSS0)
colnames(zillow) %in% "MoM"
!(colnames(zillow) %in% "MoM")
zillowSS1<-zillow[,c(-9,-10)]
colnames(zillowSS1)
rm(list(zillowSS0, zillowSS1))
rm(zillowSS0, zillowSS1)
?subset
zillowOH<-zillow[zillow$State=="OH",]
View(zillowOH)
zillow<-zillow[zillow$State=="OH" & zillow$Zri<1000 ,]
zillow<-read.csv("data/zillow.csv")
zillowOHCheap<-zillow[zillow$State=="OH" & zillow$Zri<1000 ,]
View(zillowOHCheap)
zillowOHWV<-zillow[zillow$State=="OH" | zillow$State== "WV",]
View(zillowOHWV)
rm(list = grep(pattern="zillowO*"))
rm(list = ls(pattern="zillowO*"))
zillow<-read.csv("data/zillow.csv")
rm(list = ls(pattern="zillowO*")) # Yeah, this may be a bit obscure at the moment. Try to figure it out, its good exercise.
zillow<-read.csv("data/zillow.csv")
rm(list = ls(pattern="zillowOH*")) # Yeah, this may be a bit obscure at the moment. Try to figure it out, its good exercise.
zillowOHWV<-zillow[zillow$State=="OH" | zillow$State== "WV",]
rm(list = ls(pattern="zillowOH*")) # Yeah, this may be a bit obscure at the moment. Try to figure it out, its good exercise.
?subset
zillowSS0<-subset(zillow, select=c(State, County, Zri))
colnames(zillowSS0)
head(zillowSS0)
zillowSS1<-subset(zillow, select=Date:Zri)) # Note the lack of quotation marks
zillowSS1<-subset(zillow, select=Date:Zri) # Note the lack of quotation marks
colnames(zillowSS1) # names of columns
head(zillowSS1) # A sampling of data
rm(list = ls(pattern = "zillowSS*"))
zillowOHWV<-subset(zillow, State=="OH" | State=="WV")
View(zillowOHWV)
rm(zillowOHWV)
zillowOW<-subset(zillow, (State=="OH" | State=="WV") & Zri<1000 , select = Date:Zri)
View(zillowOW)
?aggregate
View(zillow)
aggregate(zillow, by=list(State), FUN = mean, na.rm=T)
aggregate(zillow, by=list(zillow$State), FUN = mean, na.rm=T)
zillowST<-subset(zillow, select=c(State, SizeRank:ZriRecordCnt))
rm(zillowOW)
aggregate(zillowST, by=list(zillow$State), FUN = mean, na.rm=T)
aggregate(zillowST, by=list(zillowST$State), FUN = mean, na.rm=T)
aggregate(zillowST, by=list(zillowST$State), FUN=mean, na.rm=T)
aggregate(zillowST, by=list(zillowST$State), FUN=mean, na.rm=T)
zillowSS0<-subset(zillow, select=c(State, SizeRank:ZriRecordCnt))
rm(list=ls(pattern = zillowS*))
rm(list=ls(pattern = "zillowS*"))
zillow<-read.csv("data/zillow.csv")
zillowSS0<-subset(zillow, select=c(State, SizeRank:ZriRecordCnt))
zillowState<-aggregate(zillowSS0, by=list(zillowSS0$State), FUN=mean, na.rm=T)
View(zillowState)
zillowState<-aggregate(zillowSS0[, -1], by=list(zillowSS0$State), FUN=mean, na.rm=T)
View(zillowState)
zillowState<-aggregate(x=zillowSS0, by=list(State), FUN=mean, na.rm=T)
zillowState<-aggregate(x=zillowSS0, by=State, FUN=mean, na.rm=T)
zillowState<-aggregate(x=zillowSS0, by="State", FUN=mean, na.rm=T)
zillowState<-aggregate(x=zillowSS0, by=list("State"), FUN=mean, na.rm=T)
zillowState<-aggregate(x=zillowSS0[,-1], by=list(zillowSS0$State), FUN=mean, na.rm=T)
mean(zillow[zillow$State=="OH", "Zri"])
zillowState[zillowState$Group.1=="OH",]
mean(zillow[zillow$State=="OH", "Zri"])
aggregate(Zri~State, data=zillowSS0)
aggregate(Zri~State, data=zillowSS0, FUN= mean, na.rm=T)
aggregate(.~State, data=zillowSS0, FUN= mean, na.rm=T)
zillowRandom<-zillow[sample(1:nrow(zillow), 50),]
View(zillowRandom)
rm(list=ls(pattern="zillow*"))
zillow<-read.csv("data/zillow.csv")
q()
codes<-read.csv("data/codes.csv")
View(codes)
View(codes)
colnames(codes)<-c("name", "iso2", "iso3")
users2006<-read.csv("data/Users2006.csv")
users2007<-read.csv("data/Users2007.csv")
servers<-read.csv("data/Servers.csv")
servers<-read.csv("data/Servers.csv")
str(users2006)
users<-rbind(users2006, users2007)
View(users)
head(c(users2006, user2007))
head(c(users2006, users2007))
usersLong<-rbind(users2006, users2007)
View(usersLong)
rm(users)
colnames(usersWide)<-c("iso3", "year", "users2006")
usersWide<-users2006
colnames(usersWide)<-c("iso3", "year", "users2006")
usersWide$users2007<-users2007$Users
head(usersWide)
usersWide<-usersWide[,-2]
View(usersWide)
head(users2006)
head(users2007)
head(users2006)
?merge
users<-merge(codes, users2006)
View(users)
codes<-read.csv("data/codes.csv")
View(codes)
colnames(codes)<-c("name", "iso2", "iso3")
users<-merge(codes, users2006)
View(users)
users<-merge(codes, users2006, by.x='iso3', by.y='iso2')
users<-merge(codes, users2006, by.x='iso3', by.y='ISO3')
View(users)
View(usersLong)
users<-merge(codes, usersLong, by.x='iso3', by.y='ISO3')
users<-merge(codes, usersLong, by.x='iso3', by.y='ISO3', all.y=TRUE)
nrow(users)
View(users)
servers<-read.csv("data/Servers.csv")
itInfrastructure<-merge(users, servers, by=c('iso3', 'year'))
itInfrastructure<-merge(users, servers, by=c('iso3', 'Year'))
View(itInfrastructure)
View(itInfrastructure)
View(itInfrastructure)
?lm
write.csv(itInfrastructure, "data/itInfrastructure.csv")
head(itInfrastructure)
summary(itInfrastructure)
View(itInfrastructure)
table(itInfrastructure$Users, itInfrastructure$Servers)
install.packages('mice')
md.pattern(itInfrastructure[,4:5])
library(mice)
md.pattern(itInfrastructure[,4:5])
md.pattern(itInfrastructure[,5:6])
itInfrastructureNARm<-na.rm(itInfrastructure)
na.omit(itInfrastructure)
?na.omit
itInfrastructureNARm<-na.exclude(itInfrastructure)
nrows(itInfrastructureNARm1)
itInfrastructureNARm1<-itInfrastructure[!(is.na(itInfrastructure$Users) & is.na(itInfrastructure$Servers)),]
nrows(itInfrastructureNARm1)
nrow(itInfrastructureNARm1)
nrow(itInfrastructureNARm)
itInfrastructureImpute<-itInfrastructure
itInfrastructureImpute[is.na(itInfrastructureImpute$Users), "Users"] <- mean(itInfrastructureImpute$Users)
summary(itInfrastructureImpute)
itInfrastructureImpute[is.na(itInfrastructureImpute$Users), "Users"] <- mean(itInfrastructureImpute$Users, na.rm = T)
summary(itInfrastructureImpute)
itInfrastructureImpute[is.na(itInfrastructureImpute$Users), "Users"] <- mean(itInfrastructureImpute$Users)
itInfrastructureImpute<-itInfrastructure
itInfrastructureImpute[is.na(itInfrastructureImpute$Users), "Users"] <- mean(itInfrastructureImpute$Users)
summary(itInfrastructureImpute)
summary(itInfrastructureImpute)
itInfrastructureImpute[is.na(itInfrastructureImpute$Users), "Users"] <- mean(itInfrastructureImpute$Users, na.rm=T)
summary(itInfrastructureImpute)
is.na(c(1, NA, 3))
D$fac
itInfrastructure<-merge(users, servers, by=c('iso3', 'Year'))
head(itInfrastructure)
itInfrastructure<-merge(users, servers, by=c('iso3', 'Year'))
write.csv(itInfrastructure, "data/itInfrastructure.csv", row.names = F)
itInfrastructure<-read.csv("data/itInfrastructure.csv")
head(itInfrastructure)
data("mtcars")
mtcars
library(ggplot2)
(mtcars[32,])
qplot(mtcars[,"mpg"])
qplot(mtcars[,"mpg"], geom="line")
qplot(mtcars[,"mpg"], x="car", y="value", geom="line")
qplot(mtcars[32,], geom="line")
(mtcars[32,])
tmp<-data.frame(labels=colnames(mtcars),stats=mtcars[32,])
tmp
tmp<-tmp[1,]
tmp
tmp<-data.frame(x=colnames(mtcars),stats=mtcars[32,])
colnames(mtcars)
x<-colnames(mtcars)
y<-mtcars[32,]
x
y
y[1,]
y[1,][1]
y[1,][10]
y[1,][1]
y[1,][]
y
c(x,y)
c(x,as.list(y))
list(y)
list(y)[1]
y
str(y)
list(y)[1]
as.array(list(y)[1])
as.array(list(y))
as.array((y))
y[1,]
y[[1]
]
y[[1,]]
y[[]]
y[1,]
y[1,][]
mtcars[1,]
mtcars[32,]
<-as.data.frame(mtcars[32,])
x<-as.data.frame(mtcars[32,])
x
x[1,]
with(mtcars[32])
with(mtcars[32,])
library(lintr)
lint("1_Describe.Rmd")
lint("1_Describe.Rmd")
lint("1_Describe.Rmd")
lint("1_Describe.Rmd")
lint("1_Describe.Rmd")
lint("1_Describe.Rmd")
lint("2_Visualization.Rmd")
lint("3_Subsetting.Rmd")
lint("3_Subsetting.Rmd")
lint("3_Subsetting.Rmd")
lint("4_Combine.Rmd")
lint("4_Combine.Rmd")
lint("5_Transformations.Rmd")
lint("5_Transformations.Rmd")
lint("6_Missing.Rmd")
lint("6_Missing.Rmd")
summary(itInfrastructureNARm1)
library(mice)
itInfrastructureNARm1 <- itInfrastructure[!(is.na(itInfrastructure$Users) |
is.na(itInfrastructure$Servers)), ]
nrow(itInfrastructureNARm1)
nrow(itInfrastructureNARm)
nrow(itInfrastructureNARm1)-nrow(itInfrastructureNARm)
nrow(itInfrastructureNARm1)-nrow(itInfrastructureNARm)
