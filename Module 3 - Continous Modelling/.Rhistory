develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*10+(develop$age-10)*8+develop$age*develop$gender*2+rnorm(mean = 0, sd = 7, 100)
develop
summary(develop)
set.seed(2017)
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*10+(develop$age-10)*10+develop$age*develop$gender*2+rnorm(mean = 0, sd = 7, 100)
develop
summary(develop)
set.seed(2017)
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*10+(develop$age-10)*9+develop$age*develop$gender*2+rnorm(mean = 0, sd = 7, 100)
develop
summary(develop)
set.seed(2017)
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*10+(develop$age-9)*7+develop$age*develop$gender*2+rnorm(mean = 0, sd = 7, 100)
develop
summary(develop)
develop_lm_0<-lm(height~age+gender, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~age+gender+gender*age, data=develop)
summary(develop_lm_1)
library(ggplot2)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-10+(develop$age-9)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 7, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
set.seed(2017)
summary(develop)
develop_lm_0<-lm(height~gender+age, data=develop)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-10+(develop$age-9)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 7, 100)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
unname(summary(develop_lm_0)$fstatistic)[2]
unname(summary(develop_lm_0)$fstatistic)[2]
unname(summary(develop_lm_0)$fstatistic)[3]
round(unname(summary(develop_lm_0)$fstatistic)[1], digits=2)
round(unname(develop_lm_0$coefficients[1]))
round(unname(develop_lm_0$coefficients[0]))
round(unname(develop_lm_0$coefficients[2]))
summary(develop_lm_0)
round(unname(develop_lm_0$coefficients[3]))
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-10+(develop$age-9)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 6, 100)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-12+(develop$age-9)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 6, 100)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
summary(develop)
develop$height<-100+develop$gender*-12+(develop$age-9)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-12+(develop$age-9)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
summary(develop)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
round(unname(develop_lm_0$coefficients[2]))
round(unname(develop_lm_1$coefficients[1]))
round(unname(develop_lm_1$coefficients[2]))
round(unname(develop_lm_1$coefficients[3]))
predict(develop_lm_1, newdata = data.frame(0, 10))
predict(develop_lm_1, newdata = data.frame(gender=0, age=10))
data.frame(gender=0, age=10)
predict(develop_lm_1, newdata = data.frame(gender=1, age=10))
predict(develop_lm_1, newdata = data.frame(gender=0, age=18))
predict(develop_lm_1, newdata = data.frame(gender=1, age=18))
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-develop$gender*-20+(develop$age)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
summary(develop)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-develop$gender*-20+(develop$age)*8+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
predict(develop_lm_1, newdata = data.frame(gender=0, age=10))
predict(develop_lm_1, newdata = data.frame(gender=1, age=10))
predict(develop_lm_1, newdata = data.frame(gender=0, age=7))
predict(develop_lm_1, newdata = data.frame(gender=1, age=7))
develop$height<-100+develop$gender*-20+(develop$age-12)*8+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-20+(develop$age-12)*8+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
summary(develop)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
predict(develop_lm_1, newdata = data.frame(gender=0, age=7))
predict(develop_lm_1, newdata = data.frame(gender=1, age=7))
predict(develop_lm_1, newdata = data.frame(gender=0, age=10))
predict(develop_lm_1, newdata = data.frame(gender=1, age=10))
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-30+(develop$age-10)*8+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-30+(develop$age-10)*8+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
predict(develop_lm_1, newdata = data.frame(gender=0, age=10))
predict(develop_lm_1, newdata = data.frame(gender=1, age=10))
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-30+(develop$age-10)*8+develop$age*develop$gender*2+rnorm(mean = 0, sd = 5, 100)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop$height<-100+develop$gender*-25+(develop$age-10)*8+develop$age*develop$gender*2+rnorm(mean = 0, sd = 5, 100)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop$height<-100+develop$gender*-20+(develop$age-10)*3+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-20+(develop$age-10)*3+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
summary(develop)
develop$height<-110+develop$gender*-20+(develop$age-10)*3+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-110+develop$gender*-20+(develop$age-10)*3+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
set.seed(2017) # Set random number seed for replicability
develop<-data.frame(gender=sample(0:1, 100, replace=T), age=sample(10:18, 100, replace=T))
develop$height<-100+develop$gender*-20+(develop$age-10)*7+develop$age*develop$gender*3+rnorm(mean = 0, sd = 5, 100)
summary(develop)
develop_lm_0<-lm(height~gender+age, data=develop)
summary(develop_lm_0)
develop_lm_1<-lm(height~gender+age+gender*age, data=develop)
summary(develop_lm_1)
predict(develop_lm_1, newdata = data.frame(gender=0, age=10))
predict(develop_lm_1, newdata = data.frame(gender=0, age=10))
predict(develop_lm_1, newdata = data.frame(gender=1, age=10))
predict(develop_lm_1, newdata = data.frame(gender=1, age=18))
newDevelop<-data.frame(gender=c(0,1,0,1), age=(10, 10, 18, 18))
newDevelop<-data.frame(gender=c(0,1,0,1), age=c(10, 10, 18, 18))
newDevelop
predict(develop_lm_1, newdata = newDevelop)
newDevelop$estHeight<-predict(develop_lm_1, newdata = newDevelop)
qplot(x=age, y=estHeight, col=gender, data = newDevelop)+geom_line
qplot(x=age, y=estHeight, col=gender, data = newDevelop)+geom_line()
qplot(x=age, y=estHeight, col=gender, data = newDevelop)+geom_line(group=1)
qplot(x=age, y=estHeight, col=factor(gender), data = newDevelop)+geom_line(group=1)
qplot(x=age, y=estHeight, col=factor(gender), data = newDevelop)+geom_line()
qplot(x=age, y=estHeight, col=factor(gender), data = newDevelop)+geom_line()+theme_bw()
qplot(data=estimates,x=beds, y=rent, col=factor(sqft))+geom_line()
library(ggplot2)
load("data/develop_fit")
developOut<-develop
developOut<-rbind(develop, data.frame(gender=0:1, age=c(10:10), height=c(400,400))
)
developOut<-rbind(develop, data.frame(gender=0:1, age=c(10:10), height=c(400,400)))
developOut<-rbind(develop[1:30,], data.frame(gender=0:1, age=c(10:10), height=c(400,400)))
developOut<-rbind(develop, data.frame(gender=0:1, age=c(10:10), height=c(400,400)))
developOut_lm_0<-lm(height~gender+age, data=developOut)
summary(developOut)
summary(developOut_lm_0)
developOut<-rbind(develop[1:30,], data.frame(gender=0:1, age=c(10:10), height=c(400,400)))
developOut_lm_0<-lm(height~gender+age, data=developOut)
summary(developOut_lm_0)
developSmall<-develop[1:30]  # I am reducing the sample size so that the effect of outliers is more pronounced.
developOut<-rbind(develop[1:30,], data.frame(gender=0:1, age=c(10:10), height=c(400,400))) # Adding the aliens
developSmall<-develop[1:30]  # I am reducing the sample size so that the effect of outliers is more pronounced.
developSmall<-develop[1:30,]  # I am reducing the sample size so that the effect of outliers is more pronounced.
developOut<-rbind(develop[1:30,], data.frame(gender=0:1, age=c(10:10), height=c(400,400))) # Adding the aliens
developSmall_lm_0<-lm(height~gender+age, data=developSmall)
developOut_lm_0<-lm(height~gender+age, data=developOut) # Fitting the model with aliens
summary(developSmall_lm_0)
summary(developOut_lm_0)
summary(developSmall_lm_0)
summary(developOut_lm_0)
summary(developSmall_lm_0)
summary(developOut_lm_0)
library(ggplot2)
library(texreg)
load("data/develop_fit")
screenreg(list(developSmall_lm_0,developOut_lm_0))
developSmall_lm_0$effects
developSmall_lm_0$assign
screenreg(list(developSmall_lm_0,developOut_lm_0))
summary(developSmall_lm_0)
tmp<-summary(developSmall_lm_0)
tmp$fstatistic
summary(developSmall_lm_0)$fstatistic
tmp$df
rm(tmp)
summary(developOut_lm_0)$fstatistic
plotDevSmall<-ggplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals)
plotDevSmall
plotDevSmall<-ggplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")
plotDevSmall
ggplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")
qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")+theme_bw()
plotDevOut<-<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+theme_bw()
??multiplot
library(ggplot2)
library(texreg) # To lay two model results side by side
library(grid) # To lay two separate plots side by side
load("data/develop_fit")
grid(plotDevSmall, plotDevOut)
library(grid)
?grid
grid.arrange(plotDevSmall, plotDevOut)
library(gridExtra) # To lay two separate plots side by side
grid.arrange(plotDevSmall, plotDevOut)
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")+ylim(-15:300)+xlim(100:200)+theme_bw()
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")+ylim(-15,300)+xlim(100,200)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+ylim(-15,300)+xlim(100,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+ylim(-50,300)+xlim(100,200)+theme_bw()
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")+ylim(-50,300)+xlim(100,200)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+ylim(-50,300)+xlim(100,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+ylim(-100,300)+xlim(100,200)+theme_bw()
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")+ylim(-100,300)+xlim(100,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall_lm_0$residuals, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0$residuals, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=develop$height, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut_lm_0height, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut$height, geom="point")+ylim(-100,300)+xlim(90,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+ylim(0,400)+xlim(90,200)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut$height, geom="point")+ylim(0,400)+xlim(90,200)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+ylim(0,400)+xlim(0,400)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut$height, geom="point")+ylim(0,400)+xlim(0,400)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
screenreg(list(developSmall_lm_0,developOut_lm_0))
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+xlab("Estimated")+ylab("Actual")+ylim(0,400)+xlim(0,400)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut$height, geom="point")+xlab("Estimated")+ylab("Actual")+ylim(0,400)+xlim(0,400)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+ggtitle("Small")+xlab("Estimated")+ylab("Actual")+ylim(0,400)+xlim(0,400)+theme_bw()
plotDevOut<-qplot(x=developOut_lm_0$fitted.values, y=developOut$height, geom="point")+ggtitle("Outlier")+xlab("Estimated")+ylab("Actual")+ylim(0,400)+xlim(0,400)+theme_bw()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
mean(developOut$height)
sd(developOut$height)
u+3*s
u<-mean(developOut$height)
s<-sd(developOut$height)
u+3*s
u-3*s # any kid shorter than this would be an outlier
upper<-u+3*s # any kid taller than this would be an outlier
lower<-u-3*s # any kid shorter than this would be an outlier
developOut[developOut$height>upper OR developOut$height<lower,] # Filter the outliers
developOut[developOut$height>upper | developOut$height<lower,] # Filter the outliers
developSmall<-develop[1:30,]  # I am reducing the sample size so that the effect of outliers is more pronounced.
developOut<-rbind(develop[1:30,], data.frame(gender=0:1, age=c(10:10), height=c(399,401))) # Adding the aliens
developSmall_lm_0<-lm(height~gender+age, data=developSmall) # Fitting the model with reduced sample
developOut_lm_0<-lm(height~gender+age, data=developOut) # Fitting the model with aliens
screenreg(list(developSmall_lm_0,developOut_lm_0))
summary(developSmall_lm_0)$fstatistic # Compare F statistics
summary(developOut_lm_0)$fstatistic
summary(developSmall_lm_0)$fstatistic # Compare F statistics
summary(developOut_lm_0)$fstatistic
plotDevSmall<-qplot(x=developSmall_lm_0$fitted.values, y=developSmall$height, geom="point")+ggtitle("Small")+xlab("Estimated")+ylab("Actual")+ylim(0,400)+xlim(0,400)+theme_bw()
qplot(developOut$height)+geom_boxplot()
qplot(data=developOut, x=gender y=height)+geom_boxplot()
qplot(data=developOut, x=gender, y=height)+geom_boxplot()
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()
outlier<-(developOut$height>upper | developOut$height<lower)
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=outlier))
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=outlier), hjust=0.3)
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=outlier), hjust=-0.3)
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=which(outlier)), hjust=-0.3)
outlier<-(developOut$height>upper | developOut$height<lower)
which(outlier)
x<-developOut$height
(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
rm(x)
outlier
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=which(outlier)), na.rm=T, hjust=-0.3)
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.3)
outlier[outlier]<-which(outlier)
outlier
outlier[outlier==0]<-""
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.3)
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.4)
qplot(data=developOut, x=factor(gender), y=height)+geom_boxplot()+geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.4)
qplot(data=developOut, x=factor(gender), y=height)
outlier[outlier]<-developOut[outlier, "height"] # Put the row number in
outlier<-(developOut$height>upper | developOut$height<lower) # Is this an outlier?
outlier[outlier]<-developOut[outlier, "height"] # Put the row number in
outlier
outlier[outlier==0]<-"" # Leave blank if not outlier
qplot(data=developOut, x=factor(gender), y=height) +geom_boxplot()+ # Create a boxplot
geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.4) # Label the outliers by row numbers
developIn<-developOut[!(developOut$height>upper | developOut$height<lower),]
developIn
tail(developIn)
qplot(data=developOut, x=factor(gender), y=height) +geom_boxplot()+ # Create a boxplot
geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.4) # Label the outliers by row numbers
cooks.distance(develoOut_lm_0)
cooks.distance(developOut_lm_0)
?cooks.distance
cd<-cooks.distance(developOut_lm_0)
cd[cd>mean(cd)*4]
ggplot(developOut_lm_0, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
ggplot(developOut_lm_0, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")+
xlab("Obs. Number")+ylab("Cook's distance")+
ggtitle("Cook's distance")+theme_bw()
library(ggplot2)
library(car)
data(mtcars)
load(file="data/mtcars_fit")
load(file="data/develop_fit")
qplot(x=mtcars_lm_0$fitted.values, y=mtcars_lm_0$residuals) # This is easy to remember
qplot(cd)+geom_bar()
qplot(cd)+geom_bar(stat='identity)
ggplot(developOut_lm_0, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")+
xlab("Obs. Number")+ylab("Cook's distance")+
qplot(cd)+geom_bar(stat='identity')
qplot(cd)+geom_bar(stat='identity', position='identity')
qplot(cd, geom='bar', stat='identity')
qplot(cd, geom='bar', stat='identity', position='identity')
qplot(y=cd, x=seq_along(cd), geom='bar', stat='identity', position='identity')
qplot(y=cd, x=seq_along(cd), geom='bar', stat='identity')
qplot(cd, seq_along(cd))+geom_bar(stat='identity')
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')
qplot(y=cd, x=seq_along(cd), geom="bar", stat='identity') # Easy to remember
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity') # Easy to remember
plotDevSmall<-ggplot(developSmall_lm_0, aes(.fitted .resid))+ geom_point()
plotDevSmall<-ggplot(developSmall_lm_0, aes(.fitted, .resid))+ geom_point()
grid.arrange(plotDevSmall, plotDevOut, nrow=1)
ggplot(mtcars_lm_0, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point()
ggplot(mtcars_lm_0, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point()+
geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
ggplot(mtcars_lm_0, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point()+
geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
ggplot(mtcars_lm_0, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point()+ geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
ggplot(mtcars_lm_0, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point()+geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
ggplot(mtcars_lm_0, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point()
qplot(data=developOut, x=factor(gender), y=height, geom='boxplot')+ # Create a boxplot
geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.4) # Label the outliers by row numbers
qplot(data=developOut, x=factor(gender), y=height, geom='boxplot')+ # Create a boxplot
geom_text(aes(label=(outlier)), na.rm=T, hjust=-0.4) # Label the outliers by row numbers
load(file="data/rent_fit")
qplot(data=rent, x=beds, y=rent)
qplot(data=rent, x=beds, y=rent, col=hood)
qplot(data=rent, x=beds, y=rent, col=hood)+geom_smooth(method="lm")
qplot(data=rent, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
qplot(data=rent, x=baths, y=rent, col=hood)+geom_smooth(method="lm", se=F)
beds
qplot(data=rent, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
set.seed(2017)
set.seed(2017)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:5], 100, replace=T))
rent2$rent<-200+150*rent$beds+.50*rent$sqft+50*rent$baths+rnorm(100, mean=0, sd=80)-20*as.numeric(rent$hood)
rent2<-rent[order(rent$beds, rent$sqft),]
knitr::opts_chunk$set(echo = TRUE)
set.seed(2017)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:5], 100, replace=T))
rent2$rent<-200+150*rent$beds+.50*rent$sqft+50*rent$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent$hood)
rent2<-rent[order(rent$beds, rent$sqft),]
View(rent2)
qplot(data=rent, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
set.seed(2017)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 100, replace=T))
rent2$rent<-200+150*rent$beds+.50*rent$sqft+50*rent$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent$hood)
rent2<-rent[order(rent$beds, rent$sqft),]
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
set.seed(2017)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 100, replace=T))
rent2$rent<-200+150*rent$beds+.50*rent$sqft+50*rent$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent$hood)
rent2<-rent[order(rent$beds, rent$sqft),]
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
summary(rent2)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 100, replace=T))
rent2$rent<-200+150*rent$beds+.50*rent$sqft+50*rent$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent$hood)
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 100, replace=T))
rent2$rent<-200+150*rent$beds+.50*rent$sqft+50*rent$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent$hood)
rent2<-rent[order(rent$beds, rent$sqft),]
rent2$rent<-200+150*rent2$beds+.50*rent2$sqft+50*rent2$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent2$hood)
set.seed(2017)
rent2<-data.frame(beds=sample(1:5, 100, replace=T), baths=sample(1:2, 100, replace=T),sqft=round(rnorm(100, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 100, replace=T))
rent2$rent<-200+150*rent2$beds+.50*rent2$sqft+50*rent2$baths+rnorm(100, mean=0, sd=80)-30*as.numeric(rent2$hood)
rent2<-rent2[order(rent2$beds, rent2$sqft),]
library(ggplot2)
library(ggplot2)
set.seed(7)
# Create a simulated dataset
rent2<-data.frame(beds=sample(1:5, 300, replace=T), baths=sample(1:2, 300, replace=T),sqft=round(rnorm(300, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 300, replace=T))
# Calculate the rent based on other variables
rent2$rent<-200+150*rent2$beds+.50*rent2$sqft+50*rent2$baths-30*as.numeric(rent2$hood)+rnorm(300, mean=0, sd=80)
# Order the dataset by number of beds
rent2<-rent2[order(rent2$beds, rent2$sqft),]
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
library(ggplot2)
set.seed(7)
rent2<-data.frame(beds=sample(1:5, 300, replace=T), baths=sample(1:2, 300, replace=T),sqft=round(rnorm(300, mean=1000, sd=200)), hood=sample(LETTERS[1:2], 300, replace=T))
rent2$rent<-200+150*rent2$beds+.50*rent2$sqft+50*rent2$baths-30*as.numeric(rent2$hood)+rnorm(300, mean=0, sd=80)
rent2<-rent2[order(rent2$beds, rent2$sqft),]
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
set.seed(7)
rent2<-data.frame(beds=sample(1:5, 300, replace=T), baths=sample(1:2, 300, replace=T),sqft=round(rnorm(300, mean=1000, sd=200)), hood=sample(LETTERS[1:3], 300, replace=T))
rent2$rent<-200+150*rent2$beds+.50*rent2$sqft+50*rent2$baths-30*as.numeric(rent2$hood)+rnorm(300, mean=0, sd=80)
rent2<-rent2[order(rent2$beds, rent2$sqft),]
qplot(data=rent2, x=beds, y=rent, col=hood)+geom_smooth(method="lm", se=F)
head(rent2, n=5)
rep(1, 5)
data.frame(beds=rent2$beds[1:5], baths=rent2$baths[1:5], sqft=rent2$sqft[1:5], b=c(0,1,0,0,0), c=c(1,0,1,0,0), rent=rent2$rent[1:5])
summary(rent2_lm_0)
rent2_lm_0<-lm(rent~beds+baths+sqft+factor(hood), data=rent2)
summary(rent2_lm_0)
rent2_lm_0$coefficients[5]
round(rent2_lm_0$coefficients[5], digits=2)
round(rent2_lm_0$coefficients[6], digits=2)
round(rent2_lm_0$coefficients[1]+rent2_lm_0$coefficients[5], digits=2)
unname(round(rent2_lm_0$coefficients[5], digits=2))
unname(round(rent2_lm_0$coefficients[1]+rent2_lm_0$coefficients[5], digits=2))
unname(round(rent2_lm_0$coefficients[1], digits=2))
unname(round(rent2_lm_0$coefficients[1]+rent2_lm_0$coefficients[6], digits=2))
library(plm)
rent2_plmFE_0<-plm(rent~beds+baths+sqft|hood, data = rent2, model = "within")
?plm
rent2_plmFE_0<-plm(rent~beds+baths+sqft, data = rent2, model = "within", index = hood)
rent2_plmFE_0<-plm(rent~beds+baths+sqft, data = rent2, model = "within", index = 'hood')
summary(rent2_plmFE_0)
library(ggplot2)
library(texreg) # To lay two model results side by side
library(gridExtra) # To lay two separate plots side by side
load("data/develop_fit")
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+ # Easy to remember
#ggplot(developOut_lm_0, aes(seq_along(.cooksd), .cooksd))+ # Directly uses fitted model
# geom_bar(stat="identity", position="identity")+
#  xlab("Obs. Number")+ylab("Cook's distance")+
#  ggtitle("Cook's distance")+theme_bw()
)
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')
qplot(y=cd, x=seq_along(cd), geom='bar',stat='identity')
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+hline(mean(cd*4)) # Easy to remember
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+geom_hline(mean(cd*4)) # Easy to remember
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+geom_hline(y=mean(cd*4)) # Easy to remember
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+geom_hline(yintercept=mean(cd*4)) # Easy to remember
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+geom_hline(yintercept=mean(cd*4),col='red') # Easy to remember
ggplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+  # Easy to remember
hline(mean(cd*4))+ geom_hline(yintercept=mean(cd*4),col='red') +
xlab("Observations") + ylab("Cook's Distance") + theme_bw()
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+  # Easy to remember
hline(mean(cd*4))+ geom_hline(yintercept=mean(cd*4),col='red') +
xlab("Observations") + ylab("Cook's Distance") + theme_bw()
qplot(y=cd, x=seq_along(cd))+geom_bar(stat='identity')+  # Easy to remember
geom_hline(yintercept=mean(cd*4),col='red') + # Add a line at 4 times the mean of cook's distance
xlab("Observations") + ylab("Cook's Distance") + theme_bw()
library(ggplot2)
qplot(x=disp, y=mpg, data=mtcars) + geom_smooth(method="lm", se=FALSE) + geom_hline(yintercept = 15, lty=2) + geom_vline(xintercept=350, lty=2)
qplot(x=disp, y=mpg, data=mtcars) + geom_smooth(method="lm", se=FALSE) + geom_hline(yintercept = 15, lty=2) + geom_abline(c(350,0), c(350,15), lty=2)
?geom_abline
qplot(x=disp, y=mpg, data=mtcars) + geom_smooth(method="lm", se=FALSE) + geom_hline(yintercept = 15, lty=2) + geom_abline(xintercept=350, lty=2)
install.packages("lintr")
library(lintr)
lintr
lint("1_OLS.Rmd")
lint("1_OLS.Rmd")
lint("1_OLS.Rmd")
lint("1_OLS.Rmd")
lint("1_OLS.Rmd")
lint("1_OLS.Rmd")
qplot(x = disp, y = mpg, data = mtcars) +
geom_smooth(method = "lm", se = FALSE) + # Fit regression line
# add guide lines
geom_hline(yintercept = 15, lty = 2) + geom_abline(xintercept = 350, lty = 2)
lint("2_Interactions.Rmd")
lint("2_Interactions.Rmd")
lint("2_Interactions.Rmd")
lint("2_Interactions.Rmd")
lint("2_Interactions.Rmd")
lint("2_Interactions.Rmd")
lint("1_OLS.Rmd")
lint("2_Interactions.Rmd")
lint("2_Interaction.Rmd")
lint("2_Interaction.Rmd")
lint("2_Interaction.Rmd")
lint("2_Interactions.Rmd")
lint("3_Diagnostics.Rmd")
lint("3_Diagnostics.Rmd")
lint("3_Diagnostics.Rmd")
lint("4_Outliers.Rmd")
lint("4_Outliers.Rmd")
lint("4_Outliers.Rmd")
lint("4_Outliers.Rmd")
lint("5_Fixed_Effects.Rmd")
